{"ast":null,"code":"var _jsxFileName = \"/Users/vishalkumarprasad/Documents/GitHub/FirstReactApp/firstapp/src/toggle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { DarkModeSwitch } from 'react-toggle-dark-mode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DARK_CLASS = \"dark\";\n\nconst DarkToggle = () => {\n  _s();\n\n  const systemPrefersDark = useMediaQuery({\n    query: \"(prefers-color-scheme: dark)\"\n  }, undefined, prefersDark => {\n    setIsDark(prefersDark);\n  });\n  const [isDark, setIsDark] = useState(systemPrefersDark);\n  /*const toggleDarkMode = (checked: boolean) => {setIsDark(checked);*/\n\n  useEffect(() => {\n    if (isDark) {\n      document.documentElement.classList.add(DARK_CLASS);\n    } else {\n      document.documentElement.classList.remove(DARK_CLASS);\n    }\n  }, [isDark]);\n  return /*#__PURE__*/_jsxDEV(DarkModeSwitch, {\n    checked: isDark,\n    style: {\n      marginBottom: '2rem'\n    },\n    onChange: event => setIsDark(event.target.checked),\n    size: 50\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DarkToggle, \"AYmtLr/QaVfTI6GFtWbtTOLVse4=\", false, function () {\n  return [useMediaQuery];\n});\n\n_c = DarkToggle;\nexport default DarkToggle;\n\nvar _c;\n\n$RefreshReg$(_c, \"DarkToggle\");","map":{"version":3,"sources":["/Users/vishalkumarprasad/Documents/GitHub/FirstReactApp/firstapp/src/toggle.js"],"names":["React","useEffect","useState","useMediaQuery","DarkModeSwitch","DARK_CLASS","DarkToggle","systemPrefersDark","query","undefined","prefersDark","setIsDark","isDark","document","documentElement","classList","add","remove","marginBottom","event","target","checked"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,cAAT,QAA+B,wBAA/B;;AAEA,MAAMC,UAAU,GAAG,MAAnB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAMC,iBAAiB,GAAGJ,aAAa,CACnC;AACIK,IAAAA,KAAK,EAAE;AADX,GADmC,EAInCC,SAJmC,EAKnCC,WAAW,IAAI;AACXC,IAAAA,SAAS,CAACD,WAAD,CAAT;AACH,GAPkC,CAAvC;AAUA,QAAM,CAACE,MAAD,EAASD,SAAT,IAAsBT,QAAQ,CAACK,iBAAD,CAApC;AACA;;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIW,MAAJ,EAAY;AACRC,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCC,GAAnC,CAAuCX,UAAvC;AACH,KAFD,MAEO;AACHQ,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCE,MAAnC,CAA0CZ,UAA1C;AACH;AACJ,GANQ,EAMN,CAACO,MAAD,CANM,CAAT;AAQA,sBACI,QAAC,cAAD;AACI,IAAA,OAAO,EAAEA,MADb;AAEI,IAAA,KAAK,EAAE;AAAEM,MAAAA,YAAY,EAAE;AAAhB,KAFX;AAGI,IAAA,QAAQ,EAAEC,KAAK,IAAIR,SAAS,CAACQ,KAAK,CAACC,MAAN,CAAaC,OAAd,CAHhC;AAII,IAAA,IAAI,EAAE;AAJV;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CA9BD;;GAAMf,U;UACwBH,a;;;KADxBG,U;AAgCN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { DarkModeSwitch } from 'react-toggle-dark-mode';\n\nconst DARK_CLASS = \"dark\";\n\nconst DarkToggle = () => {\n    const systemPrefersDark = useMediaQuery(\n        {\n            query: \"(prefers-color-scheme: dark)\"\n        },\n        undefined,\n        prefersDark => {\n            setIsDark(prefersDark);\n        }\n    );\n\n    const [isDark, setIsDark] = useState(systemPrefersDark);\n    /*const toggleDarkMode = (checked: boolean) => {setIsDark(checked);*/\n\n    useEffect(() => {\n        if (isDark) {\n            document.documentElement.classList.add(DARK_CLASS)\n        } else {\n            document.documentElement.classList.remove(DARK_CLASS)\n        }\n    }, [isDark]);\n\n    return (\n        <DarkModeSwitch\n            checked={isDark}\n            style={{ marginBottom: '2rem' }}\n            onChange={event => setIsDark(event.target.checked)}\n            size={50}\n        />\n    );\n};\n\nexport default DarkToggle;"]},"metadata":{},"sourceType":"module"}